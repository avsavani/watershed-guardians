{"ast":null,"code":"var _jsxFileName = \"/Users/gautamtata/Documents/gautam-project/src/components/Map/Map.js\";\nimport React, { Component } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Pin from './Pin';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nconst MAPSTYLE = 'mapbox://styles/gautamtata/cjwy3b2a8144o1cpa0lourv0t';\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoiZ2F1dGFtdGF0YSIsImEiOiJjanR0MWt0NnkwM2JmNDVvZmdzM2c1bWFzIn0.EsUpW8CxT9m30nwtQsd_dg\";\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewport: {\n        width: 1000,\n        height: 1000,\n        latitude: 36.474,\n        longitude: -121.498,\n        zoom: 8\n      },\n      markers: [{\n        longitude: -121.7345,\n        latitude: 36.4755,\n        title: 'Carmel Lagoon'\n      }]\n    };\n  }\n\n  isSelectedMarker(lat, long) {\n    if (this.props.selectedMarker) {\n      if (this.props.selectedMarker.lat === lat && this.props.selectedMarker.long === long) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    // set up the markers:\n    let markers = this.state.markers.map(marker => {\n      return React.createElement(Marker, {\n        latitude: marker.latitude,\n        longitude: marker.longitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Pin, {\n        onClick: () => this.props.markerClicked(marker.latitude, marker.longitude),\n        isSelected: this.isSelectedMarker(marker),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(ReactMapGL, Object.assign({}, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      mapboxApiAccessToken: MAPBOX_ACCESS_TOKEN,\n      mapStyle: \"mapbox://styles/gautamtata/cjwy3b2a8144o1cpa0lourv0t\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), markers);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/gautamtata/Documents/gautam-project/src/components/Map/Map.js"],"names":["React","Component","ReactMapGL","Marker","Pin","MAPSTYLE","MAPBOX_ACCESS_TOKEN","Map","state","viewport","width","height","latitude","longitude","zoom","markers","title","isSelectedMarker","lat","long","props","selectedMarker","render","map","marker","markerClicked","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,IAAoBC,MAApB,QAAiC,cAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,8BAAP;AAEA,MAAMC,QAAQ,GAAG,sDAAjB;AACA,MAAMC,mBAAmB,GAAG,+FAA5B;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,IADC;AAERC,QAAAA,MAAM,EAAE,IAFA;AAGRC,QAAAA,QAAQ,EAAE,MAHF;AAIRC,QAAAA,SAAS,EAAE,CAAC,OAJJ;AAKRC,QAAAA,IAAI,EAAE;AALE,OADJ;AAQNC,MAAAA,OAAO,EAAE,CACP;AACEF,QAAAA,SAAS,EAAE,CAAC,QADd;AAEED,QAAAA,QAAQ,EAAE,OAFZ;AAGEI,QAAAA,KAAK,EAAE;AAHT,OADO;AARH,KAFkB;AAAA;;AAoB1BC,EAAAA,gBAAgB,CAACC,GAAD,EAAMC,IAAN,EAAY;AAC1B,QAAI,KAAKC,KAAL,CAAWC,cAAf,EAA+B;AAC7B,UAAI,KAAKD,KAAL,CAAWC,cAAX,CAA0BH,GAA1B,KAAkCA,GAAlC,IAAyC,KAAKE,KAAL,CAAWC,cAAX,CAA0BF,IAA1B,KAAmCA,IAAhF,EAAsF;AACpF,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP;AACA,QAAIP,OAAO,GAAG,KAAKP,KAAL,CAAWO,OAAX,CAAmBQ,GAAnB,CAAwBC,MAAD,IAAY;AAC7C,aACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,MAAM,CAACZ,QAAzB;AAAmC,QAAA,SAAS,EAAEY,MAAM,CAACX,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,OAAO,EAAE,MAAM,KAAKO,KAAL,CAAWK,aAAX,CAAyBD,MAAM,CAACZ,QAAhC,EAA0CY,MAAM,CAACX,SAAjD,CAApB;AAAiF,QAAA,UAAU,EAAE,KAAKI,gBAAL,CAAsBO,MAAtB,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKH,KANa,CAAd;AAQA,WACE,oBAAC,UAAD,oBACM,KAAKhB,KAAL,CAAWC,QADjB;AAEE,MAAA,gBAAgB,EAAGA,QAAD,IAAc,KAAKiB,QAAL,CAAc;AAACjB,QAAAA;AAAD,OAAd,CAFlC;AAGE,MAAA,oBAAoB,EAAEH,mBAHxB;AAIE,MAAA,QAAQ,EAAC,sDAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMGS,OANH,CADF;AAUD;;AAjDyB;;AAoD5B,eAAeR,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactMapGL, {Marker} from 'react-map-gl';\nimport Pin from './Pin'\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nconst MAPSTYLE = 'mapbox://styles/gautamtata/cjwy3b2a8144o1cpa0lourv0t';\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoiZ2F1dGFtdGF0YSIsImEiOiJjanR0MWt0NnkwM2JmNDVvZmdzM2c1bWFzIn0.EsUpW8CxT9m30nwtQsd_dg\"\nclass Map extends Component {\n\n  state = {\n    viewport: {\n      width: 1000,\n      height: 1000,\n      latitude: 36.474,\n      longitude: -121.498,\n      zoom: 8\n    },\n    markers: [\n      {\n        longitude: -121.7345,\n        latitude: 36.4755,\n        title: 'Carmel Lagoon'\n      }\n    ]\n  }\n\n\n  isSelectedMarker(lat, long) {\n    if (this.props.selectedMarker) {\n      if (this.props.selectedMarker.lat === lat && this.props.selectedMarker.long === long) {\n        return true\n      }\n    }\n    return false\n  }\n\n  render() {\n    // set up the markers:\n    let markers = this.state.markers.map((marker) => {\n        return (\n          <Marker latitude={marker.latitude} longitude={marker.longitude}>\n            <Pin onClick={() => this.props.markerClicked(marker.latitude, marker.longitude)} isSelected={this.isSelectedMarker(marker)} />\n          </Marker>\n        )\n    })\n\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n        mapStyle=\"mapbox://styles/gautamtata/cjwy3b2a8144o1cpa0lourv0t\"\n      >\n        {markers}\n      </ReactMapGL>\n    );\n  }\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}